# Setup for buttercup shell script tests
# shellcheck shell=sh

die () {
	echo "$*"
	exit 1
}

checkline () {
	local line
	IFS= read -r line
	if [ ! "$line" = "$*" ]; then
		cat <<-EOF
			Expected
			    $*
			Received
			    $line
			EOF
		exit 1
	fi
}

checkoutput () {
	#set -x
	local input lines flag
	OPTIND=1
	while getopts ':n:' flag
	do
		case $flag in
			n)
				lines="$OPTARG"
				expr "$lines" : '^[0-9]\+$' >/dev/null ||
					die "checkoutput: -n expects an integer argument, not '$lines'"
				;;
			'?') die "checkoutput: Illegal option -$OPTARG";;
			:)   die "checkoutput: Option -$OPTARG requires an argument";;
		esac
	done
	shift $((OPTIND - 1))
	# Avoid $(...) stripping trailing whitespace
	# by adding an x at the end
	if [ "$lines" ]; then
		input=$(head -n"$lines" ; echo x)
	else
		input=$(cat ; echo x)
	fi
	# Remember to strip the trailing x and the last newline
	if [ ! "${input%?x}" = "$*" ]; then
		echo "Expected:"
		echo "$*" | sed 's/^/    /'
		echo "Received:"
		printf "%s" "${input%x}" | sed 's/^/    /'
		echo "END"
		exit 1
	fi
	set +x
}

testdir="${0%/*}"
if [ "${testdir%%/*}" ]; then
	# $0 is a relative path
	## Remove ./ if present, but in two steps in case testdir is "."
	testdir="${testdir#.}" # Remove leading dot if any
	testdir="${testdir#/}" # Remove leading slash if any followed .
	testdir="$PWD/${testdir}" # Prepend PWD with a single separating slash
	testdir="${testdir%/}" # Remove any trailing slash - if started as "."
fi

buttercup="${testdir%/*/*}/bin/buttercup"
if [ ! -f "$buttercup" ]; then
	die "$buttercup not found"
fi

shebangshell=$(sed -n -e '/^#!/{' -e s///p -eq -e'}' "$buttercup")

fakemacs="$testdir/fakemacs"
defaultpath="$(env -S -i sh -c 'echo $PATH')"
defaultargs="-l buttercup -f buttercup-run-discover --"

# Local Variables:
# mode: sh
# End:
